Adapter:
            - Fazer com que objetos de classes diferentes possam ser usados com a mesma interface
            
             Geralmente usado para adaptar classes de terceiros

Bridge:
            - Desacoplar uma abstração da sua implementação, de modo que as duas possam variar independentemente
            
            Geralmente usado para criar um driver de banco de dados

Composite:
            - Compor objetos em estruturas de árvore para representar hierarquias parte-todo
            
            Geralmente usado para criar menus

Decorator:
            - Anexar responsabilidades adicionais a um objeto dinamicamente
            
            Geralmente usado para adicionar funcionalidades a um objeto sem precisar criar uma subclasse

Facade:
            - Fornecer uma interface unificada para um conjunto de interfaces em um subsistema
            
            Geralmente usado para criar uma interface simples para um subsistema complexo

Flyweight:
            - Usar compartilhamento para suportar eficientemente grandes quantidades de objetos de granularidade fina
            
            Geralmente usado para evitar o custo de criação de um grande número de objetos

Proxy:
            - Fornecer um substituto ou marcador da localização de outro objeto para controlar o acesso a ele
            
            Geralmente usado para criar um objeto que controla o acesso a outro objeto